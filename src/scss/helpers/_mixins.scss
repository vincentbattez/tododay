@mixin media($media){
  // Code pour les grand écrans d'ordinateurs
  @if $media == "large-desktop"{
    @media screen and (min-width: #{$large-desktop}) {
      @content;
    }
  }
  // Code pour les écrans d'ordinateurs et +
  @if $media == "desktop"{
    @media screen and (min-width: #{$desktop}) {
      @content;
    }
  }
  // Code uniquement pour les écrans de tablette
  @if $media == "only-tablet"{
    @media screen and (min-width: #{$mobile}) and (max-width: #{$tablet}) {
      @content;
    }
  }
  // Code pour les écrans de tablette et -
  @if $media == "tablet"{
    @media screen and (max-width: #{$tablet}) {
      @content;
    }
  }
  // Code uniquement pour les écrans mobile
  @if $media == "mobile"{
    @media screen and (max-width: #{$mobile}) {
      @content;
    }
  }
  // Code uniquement pour les écrans en format paysage
  @if $media == "landscape"{
    @media screen and (orientation: landscape) {
      @content;
    }
  }
  // Code uniquement pour l'impression
  @if $media == "print"{
    @media print {
      @content;
    }
  }
}
// Ordre à la quel les medias doivent être écrite : 
/* Plus grand au plus petit

  large-desktop = très grand 
  desktop       = grand 
  tablet        = moyen 
  only-tablet   = only moyen 
  mobile        = only petit 
  landscape    = spécial
  print         = spécial

*/
/* @USAGE 
    @include media('mobile'){
      // code
    };

    @include media('tablet'){
      // code
    };
    ...
*/




// Define vertical, horizontal, or both position
@mixin center-absolute($xy) {
  position: absolute;
  
  @if $xy == 'y' {
    top: 50%;
    transform: translateY(-50%);
  }
  @else if $xy == 'x' {
    left: 50%;
    transform: translate(-50%);
  }
  @else if $xy == 'xy' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
/* @USAGE 
  .class1 {
    @include center-absolute('x');
  }
  .class2 {
    @include center-absolute('y');
  }
  .class3 {
    @include center-absolute('xy');
  }
*/

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
/* @USAGE 
  .class1 {
    @include center-block;
  }
*/

@mixin center-flex($xy) {
  display: flex;

  @if $xy == 'y' {
    align-items: center;
  }
  @else if $xy == 'x' {
    justify-content: center;
  }
  @else if $xy == 'xy' {
    align-items: center;
    justify-content: center;
  }
}
/* @USAGE 
  .class1 {
    @include center-flex('x');
  }
  .class2 {
    @include center-flex('y');
  }
  .class3 {
    @include center-flex('xy');
  }
*/



@function calculateRem($fz-body) {
  $remSize: $fz-body / 16px;
  @return  $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}
/* @USAGE 
  .class1 {
    @include font-size(20px);
  }
*/